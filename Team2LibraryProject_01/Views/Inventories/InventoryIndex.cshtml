@model IEnumerable<Team2LibraryProject_01.Models.Inventory>

    @{
        ViewBag.Title = "Inventory Index";
        string message = TempData["Success"] as string;
    }
    @using GridMvc.Html

    <h2>Inventory Index</h2>

<body>
    <hr />

        @if (!String.IsNullOrEmpty(message))
        {
            <hr />
            <div class="message">
                <p style="color: darkorange">@message</p>
            </div>
            <hr />
        }

        <p>
            @Html.ActionLink("Create New Inventory Entry", "CreateInventoryItem") |
            @Html.ActionLink("Return to Admin Section", "Admin", "Home")
        </p>

       @{
           var inventoryGrid = new WebGrid(source: Model);
       }

        <hr />
       @helper GridManageItemColumn(int id)
        {
            @Html.ActionLink("Edit", "EditInventoryItem", new { Id = id }, null)
            <span>|</span>
            @Html.ActionLink("Details", "InventoryItemDetails", new { Id = id }, null)
            <span>|</span>
            @Html.ActionLink("Delete", "DeleteInventoryItem", new { Id = id }, null)
        }

       @Html.Grid(Model).Columns(columns =>
                         {
                             columns.Add(model => model.ItemID).Titled("Item ID");
                             columns.Add(model => model.ItemPrice).Titled("Item Price");
                             columns.Add(model => model.DateAdded).Titled("Date Added").Format("{0:dd/MM/yyyy}");
                             columns.Add(model => model.ISBN).Titled("ISBN");
                             columns.Add(model => model.Book.Title).Titled("Title");
                             columns.Add(model => model.OnShelf).Titled("On Shelf");
                             columns.Add(o => o.ItemID, "Duplicate Column").Titled("Manage Item").Encoded(false).Sanitized(false).RenderValueAs(o => GridManageItemColumn(o.ItemID).ToHtmlString());                           
                         }).WithPaging(50).Sortable(true)
</body>
