@model IEnumerable<Team2LibraryProject_01.Models.Book>

    @{
        ViewBag.Title = "Member Index";
        string message = TempData["Success"] as string;
    }

<body>

    <h2>Book Index</h2>
    <hr />

    @if (!String.IsNullOrEmpty(message))
    {
        <hr />
        <div class="message">
            <p style="color: darkorange">@message</p>
        </div>
        <hr />
    }

    @using GridMvc.Html

    <p>
        @Html.ActionLink("Create New Book Entry", "AddBook") |
        @Html.ActionLink("Return to Admin Section", "Admin", "Home")
    </p>


    @{
        var catalogGrid = new WebGrid(source: Model);
    }

    <hr />

    @helper GridManageItemColumn(string id)
    {
        @Html.ActionLink("Edit", "EditBook", new { Id = id }, null)
        <span>|</span>
        @Html.ActionLink("Details", "Details", new { Id = id }, null)
        <span>|</span>
        @Html.ActionLink("Delete", "DeleteBook", new { Id = id }, null)
    }

    @Html.Grid(Model).Columns(columns =>
                         {
                             columns.Add(model => model.ISBN).Titled("ISBN");
                             columns.Add(model => model.Author_FName).Titled("First Name");
                             columns.Add(model => model.Author_LName).Titled("Last Name");
                             columns.Add(model => model.Title).Titled("Title");
                             columns.Add(model => model.Publisher).Titled("Publisher");
                             columns.Add(model => model.NumOfPages).Titled("Pages");
                             columns.Add(model => model.Year).Titled("Year");
                             columns.Add(model => model.Genre).Titled("Genre");
                             columns.Add(model => model.Language).Titled("Language");
                             columns.Add(model => model.Rating).Titled("Rating");
                             columns.Add(model => model.Shelf).Titled("Shelf");
                             columns.Add(o => o.ISBN, "Duplicate Column").Titled("Manage Book").Encoded(false).Sanitized(false).RenderValueAs(o => GridManageItemColumn(o.ISBN).ToHtmlString());
                         }).WithPaging(50).Sortable(true)
</body>
</html>
